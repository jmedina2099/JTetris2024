server:
  port: ${app.api.port}
spring:
  application:
    name: ${app.api.name}
  webflux:
    base-path: ${app.api.context.path} # reactive
  cloud:
    loadbalancer:
      enabled: true
      ribbon:
        enabled: false
reactive:
  feign:
    cloud:
      enabled: true
    ribbon:
      enabled: false  
    loadbalancer:
      enabled: true
    client:
      config:
        httpBinClient:
          options:
            readTimeoutMillis: 2000
            connectTimeoutMillis: 1000
resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
    instances: 
      HttpBinClient_getBinWithDelayInSeconds_int:
        minimumNumberOfCalls: 10
        failureRateThreshold: 50
  timelimiter:
    configs:
      default:
        timeoutDuration: 20s
eureka:
  client:
    serviceUrl:
      defaultZone: ${app.eureka.server}
  instance:
    hostname: ${app.api.eureka.instance.host}
    preferIpAddress: false
    statusPageUrlPath: ${management.context-path}/actuator/info
    healthCheckUrlPath: ${management.context-path}/actuator/health
management:
  context-path: ${app.api.context.path}
  info:
    java:
      enabled: true
    env:
      enabled: true
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health,info,beans,env
# Api App
api:
  engine:
    base-url: http://localhost:9083/service-engine/engine
  cors:
    origin: http://localhost:8080,http://localhost:9081,http://localhost:4200