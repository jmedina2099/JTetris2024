server:
  port: ${app.figures.port}
  shutdown: graceful
  netty:
    connection-timeout: 1h
    idle-timeout: 1h
    read-timeout: 1h
    write-timeout: 1h
    max-keep-alive-requests: 10
spring:
  application:
    name: ${app.figures.name}
  mvc:
    async:
      request-timeout: 1h
  webflux:
    base-path: ${app.figures.context.path} # reactive
  cloud:
    loadbalancer:
      enabled: true
      ribbon:
        enabled: false
    refresh:
      enabled: false
    discovery:
      enabled: true
      client:
        health-indicator:
          enabled: true
      reactive:
        enabled: true
  data:
    mongodb:
      uri: mongodb://${app.mongo.sever}/${figures.mongodb.name}
  kafka:
    bootstrap-servers: ${app.kafka.servers}
    producer:
      client-id: figuresProducerClientId
eureka:
  client:
    serviceUrl:
      defaultZone: ${app.eureka.server}
    healthcheck:
      enabled: true
    registry-fetch-interval-seconds: 300
    eureka-server-connect-timeout-seconds: 300
    eureka-server-read-timeout-seconds: 300
    eureka-connection-idle-timeout-seconds: 300
  instance:
    hostname: ${app.figures.eureka.instance.host}
    preferIpAddress: false
    statusPageUrlPath: ${management.context-path}/actuator/info
    healthCheckUrlPath: ${management.context-path}/actuator/health
    lease-renewal-interval-in-seconds: 300
    lease-expiration-duration-in-seconds: 900
management:
  context-path: ${app.figures.context.path}
  info:
    java:
      enabled: true
    env:
      enabled: true
  endpoint:
    health:
      show-details: "ALWAYS"
  endpoints:
    web:
      exposure:
        include: health,info,beans,env
# Figures App
figures:
  topic:
    nextFigure: nextFigureTopic
  mongodb:
    name: ${app.mongo.db.name}
use:
  kafka: ${use.kafka}
