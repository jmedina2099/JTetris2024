server:
  port: ${app.engine.port}
  shutdown: graceful
  undertow:
    no-request-timeout: 1h
  netty:
    connection-timeout: 1h
    idle-timeout: 1h
    read-timeout: 1h
    write-timeout: 1h
spring:
  application:
    name: ${app.engine.name}
  webflux:
    base-path: ${app.engine.context.path} # reactive
  cloud:
    loadbalancer:
      enabled: true
      ribbon:
        enabled: false
    refresh:
      enabled: false
    discovery:
      enabled: true
      client:
        health-indicator:
          enabled: true
      reactive:
        enabled: true
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    defer-datasource-initialization: true
  kafka:
    bootstrap-servers: ${app.kafka.servers}
    producer:
      client-id: engineProducerClientId
  sql:
    init:
      mode: always
  datasource:
    url: jdbc:mysql://${app.mysql.server}/jtetris
    username: jmedina
    password: jmedina
    driver-class-name: com.mysql.cj.jdbc.Driver
reactive:
  feign:
    cloud:
      enabled: true
    ribbon:
      enabled: false  
    loadbalancer:
      enabled: true
    client:
      config:
        figuresClient:
          options:
            writeTimeoutMillis: 3600000
            readTimeoutMillis: 3600000
            connectTimeoutMillis: 3600000
resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
    instances: 
      HttpBinClient_getBinWithDelayInSeconds_int:
        minimumNumberOfCalls: 10
        failureRateThreshold: 50
  timelimiter:
    configs:
      default:
        timeoutDuration: 1h
eureka:
  client:
    serviceUrl:
      defaultZone: ${app.eureka.server}
    healthcheck:
      enabled: true
    registry-fetch-interval-seconds: 300
    eureka-server-connect-timeout-seconds: 300
    eureka-server-read-timeout-seconds: 300
    eureka-connection-idle-timeout-seconds: 300
  instance:
    hostname: ${app.engine.eureka.instance.host}
    preferIpAddress: false
    statusPageUrlPath: ${management.context-path}/actuator/info
    healthCheckUrlPath: ${management.context-path}/actuator/health
    lease-renewal-interval-in-seconds: 300
    lease-expiration-duration-in-seconds: 900
management:
  context-path: ${app.engine.context.path}
  info:
    java:
      enabled: true
    env:
      enabled: true
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health,info,beans,env
# Engine App
engine:
  topic:
    nextFigure: nextFigureTopic
    figure: figureTopic
    board: boardTopic
  groupId:
    message: figureMessage
  figures:
    base-url: http://localhost:9083/service-figures/figures
    askForNextFigureUri: /askForNextFigure
use:
  kafka: ${use.kafka}
  weblux: ${use.webflux}
