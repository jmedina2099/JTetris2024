<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.jmedina</groupId>
		<artifactId>jtetris</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<groupId>org.jmedina.jtetris</groupId>
	<artifactId>engine</artifactId>
	<packaging>war</packaging>
	<properties>
		<start-class>org.jmedina.jtetris.engine.EngineApplication</start-class>
		<app.engine.name>engine</app.engine.name>
		<app.engine.port>9084</app.engine.port>
		<app.engine.context.path>/engine</app.engine.context.path>
		<app.engine.eureka.instance.host>localhost</app.engine.eureka.instance.host>
		<app.engine.log.path>/var/log/jtetris</app.engine.log.path>
		<app.engine.log.name>jtetris-engine</app.engine.log.name>
		<app.kafka.servers>localhost:9092</app.kafka.servers>
		<app.mysql.server>localhost:3306</app.mysql.server>
		<jacoco.ut.file>
			${project.build.directory}/coverage-reports/jacoco-ut.exec</jacoco.ut.file>
		<jacoco.it.file>
			${project.build.directory}/coverage-reports/jacoco-it.exec</jacoco.it.file>
		<jacoco.out.ut>${project.reporting.outputDirectory}/jacoco-ut</jacoco.out.ut>
		<jacoco.out.it>${project.reporting.outputDirectory}/jacoco-it</jacoco.out.it>
		<sonar.coverage.jacoco.xmlReportPaths>
			${jacoco.out.ut}/jacoco.xml,
			${jacoco.out.it}/jacoco.xml
		</sonar.coverage.jacoco.xmlReportPaths>
		<sonar.coverage.exclusions>
			**/EngineApplication.*,
			**/ReactiveWebInitializer.*
		</sonar.coverage.exclusions>
		<sonar.tests>src/test/java</sonar.tests>
	</properties>
	<profiles>
		<profile>
			<id>jboss</id>
			<properties>
				<app.eureka.server>http://localhost:8080/eurekaserver/eureka</app.eureka.server>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-webflux</artifactId>
					<exclusions>
						<exclusion>
							<groupId>org.springframework.boot</groupId>
							<artifactId>spring-boot-starter-tomcat</artifactId>
						</exclusion>
					</exclusions>
				</dependency>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-undertow</artifactId>
					<scope>provided</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>tomcat</id>
			<properties>
				<app.eureka.server>http://localhost:9080/eurekaserver/eureka</app.eureka.server>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-webflux</artifactId>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<jvmArguments>
								--add-opens=java.base/java.nio=ALL-UNNAMED
								--add-exports=java.base/jdk.internal.misc=ALL-UNNAMED</jvmArguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>undertow</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<app.eureka.server>http://localhost:9080/eurekaserver/eureka</app.eureka.server>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-webflux</artifactId>
					<exclusions>
						<exclusion>
							<groupId>org.springframework.boot</groupId>
							<artifactId>spring-boot-starter-tomcat</artifactId>
						</exclusion>
					</exclusions>
				</dependency>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-undertow</artifactId>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<jvmArguments>
								--add-opens=java.base/java.nio=ALL-UNNAMED
								--add-exports=java.base/jdk.internal.misc=ALL-UNNAMED</jvmArguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>
		<dependency>
			<groupId>com.playtika.reactivefeign</groupId>
			<artifactId>feign-reactor-cloud</artifactId>
			<version>${feign-reactive.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jmedina.jtetris</groupId>
			<artifactId>feign-reactor-webclient</artifactId>
			<version>${feign-reactor-webclient.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jmedina.jtetris</groupId>
			<artifactId>feign-reactor-spring-configuration</artifactId>
			<version>${feign-reactive-spring-configuration.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-circuitbreaker-reactor-resilience4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-loadbalancer</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.ben-manes.caffeine</groupId>
			<artifactId>caffeine</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<executions>
					<execution>
						<id>default-war</id>
						<phase>package</phase>
						<configuration>
							<archive>
								<manifestEntries>
									<Add-Exports>java.base/jdk.internal.misc</Add-Exports>
									<Add-Opens>java.base/java.nio</Add-Opens>
								</manifestEntries>
							</archive>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>